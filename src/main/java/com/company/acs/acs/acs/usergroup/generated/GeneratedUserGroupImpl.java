package com.company.acs.acs.acs.usergroup.generated;

import com.company.acs.acs.acs.usergroup.UserGroup;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.acs.acs.acs.usergroup.UserGroup}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserGroupImpl implements UserGroup {
    
    private int usergroupId;
    private String name;
    private int level;
    
    protected GeneratedUserGroupImpl() {}
    
    @Override
    public int getUsergroupId() {
        return usergroupId;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public int getLevel() {
        return level;
    }
    
    @Override
    public UserGroup setUsergroupId(int usergroupId) {
        this.usergroupId = usergroupId;
        return this;
    }
    
    @Override
    public UserGroup setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public UserGroup setLevel(int level) {
        this.level = level;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("usergroupId = " + Objects.toString(getUsergroupId()));
        sj.add("name = "        + Objects.toString(getName()));
        sj.add("level = "       + Objects.toString(getLevel()));
        return "UserGroupImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof UserGroup)) { return false; }
        final UserGroup thatUserGroup = (UserGroup)that;
        if (this.getUsergroupId() != thatUserGroup.getUsergroupId()) { return false; }
        if (!Objects.equals(this.getName(), thatUserGroup.getName())) { return false; }
        if (this.getLevel() != thatUserGroup.getLevel()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUsergroupId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Integer.hashCode(getLevel());
        return hash;
    }
}