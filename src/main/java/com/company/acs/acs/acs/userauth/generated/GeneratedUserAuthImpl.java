package com.company.acs.acs.acs.userauth.generated;

import com.company.acs.acs.acs.userauth.UserAuth;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.acs.acs.acs.userauth.UserAuth}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserAuthImpl implements UserAuth {
    
    private int authId;
    private String username;
    private String hash;
    private String salt;
    
    protected GeneratedUserAuthImpl() {}
    
    @Override
    public int getAuthId() {
        return authId;
    }
    
    @Override
    public String getUsername() {
        return username;
    }
    
    @Override
    public String getHash() {
        return hash;
    }
    
    @Override
    public String getSalt() {
        return salt;
    }
    
    @Override
    public UserAuth setAuthId(int authId) {
        this.authId = authId;
        return this;
    }
    
    @Override
    public UserAuth setUsername(String username) {
        this.username = username;
        return this;
    }
    
    @Override
    public UserAuth setHash(String hash) {
        this.hash = hash;
        return this;
    }
    
    @Override
    public UserAuth setSalt(String salt) {
        this.salt = salt;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("authId = "   + Objects.toString(getAuthId()));
        sj.add("username = " + Objects.toString(getUsername()));
        sj.add("hash = "     + Objects.toString(getHash()));
        sj.add("salt = "     + Objects.toString(getSalt()));
        return "UserAuthImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof UserAuth)) { return false; }
        final UserAuth thatUserAuth = (UserAuth)that;
        if (this.getAuthId() != thatUserAuth.getAuthId()) { return false; }
        if (!Objects.equals(this.getUsername(), thatUserAuth.getUsername())) { return false; }
        if (!Objects.equals(this.getHash(), thatUserAuth.getHash())) { return false; }
        if (!Objects.equals(this.getSalt(), thatUserAuth.getSalt())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getAuthId());
        hash = 31 * hash + Objects.hashCode(getUsername());
        hash = 31 * hash + Objects.hashCode(getHash());
        hash = 31 * hash + Objects.hashCode(getSalt());
        return hash;
    }
}