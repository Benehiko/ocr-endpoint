package com.company.acs.acs.acs.user.generated;

import com.company.acs.acs.acs.user.User;
import com.company.acs.acs.acs.user.UserImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link com.company.acs.acs.acs.user.User}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserSqlAdapter implements SqlAdapter<User> {
    
    private final TableIdentifier<User> tableIdentifier;
    
    protected GeneratedUserSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("ACS", "ACS", "User");
    }
    
    protected User apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setUserId(          resultSet.getInt(1 + offset))
            .setFirstName(       resultSet.getString(2 + offset))
            .setLastName(        resultSet.getString(3 + offset))
            .setUserName(        resultSet.getString(4 + offset))
            .setUserUsergroupId( getInt(resultSet, 5 + offset))
            ;
    }
    
    protected UserImpl createEntity() {
        return new UserImpl();
    }
    
    @Override
    public TableIdentifier<User> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, User> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, User> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}