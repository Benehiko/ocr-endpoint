package com.company.acs.acs.acs.moderator.generated;

import com.company.acs.acs.acs.moderator.Moderator;
import com.company.acs.acs.acs.user.User;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.acs.acs.acs.moderator.Moderator}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedModeratorImpl implements Moderator {
    
    private int moderatorId;
    private int usersUserId;
    
    protected GeneratedModeratorImpl() {}
    
    @Override
    public int getModeratorId() {
        return moderatorId;
    }
    
    @Override
    public int getUsersUserId() {
        return usersUserId;
    }
    
    @Override
    public Moderator setModeratorId(int moderatorId) {
        this.moderatorId = moderatorId;
        return this;
    }
    
    @Override
    public Moderator setUsersUserId(int usersUserId) {
        this.usersUserId = usersUserId;
        return this;
    }
    
    @Override
    public User findUsersUserId(Manager<User> foreignManager) {
        return foreignManager.stream().filter(User.USER_ID.equal(getUsersUserId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("moderatorId = " + Objects.toString(getModeratorId()));
        sj.add("usersUserId = " + Objects.toString(getUsersUserId()));
        return "ModeratorImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Moderator)) { return false; }
        final Moderator thatModerator = (Moderator)that;
        if (this.getModeratorId() != thatModerator.getModeratorId()) { return false; }
        if (this.getUsersUserId() != thatModerator.getUsersUserId()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getModeratorId());
        hash = 31 * hash + Integer.hashCode(getUsersUserId());
        return hash;
    }
}