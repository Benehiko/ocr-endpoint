package com.company.acs.acs.acs.location.generated;

import com.company.acs.acs.acs.location.Location;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.acs.acs.acs.location.Location}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedLocationImpl implements Location {
    
    private int locationId;
    private String name;
    private String type;
    private int devicesGuardGuardId;
    
    protected GeneratedLocationImpl() {}
    
    @Override
    public int getLocationId() {
        return locationId;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public String getType() {
        return type;
    }
    
    @Override
    public int getDevicesGuardGuardId() {
        return devicesGuardGuardId;
    }
    
    @Override
    public Location setLocationId(int locationId) {
        this.locationId = locationId;
        return this;
    }
    
    @Override
    public Location setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public Location setType(String type) {
        this.type = type;
        return this;
    }
    
    @Override
    public Location setDevicesGuardGuardId(int devicesGuardGuardId) {
        this.devicesGuardGuardId = devicesGuardGuardId;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("locationId = "          + Objects.toString(getLocationId()));
        sj.add("name = "                + Objects.toString(getName()));
        sj.add("type = "                + Objects.toString(getType()));
        sj.add("devicesGuardGuardId = " + Objects.toString(getDevicesGuardGuardId()));
        return "LocationImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Location)) { return false; }
        final Location thatLocation = (Location)that;
        if (this.getLocationId() != thatLocation.getLocationId()) { return false; }
        if (!Objects.equals(this.getName(), thatLocation.getName())) { return false; }
        if (!Objects.equals(this.getType(), thatLocation.getType())) { return false; }
        if (this.getDevicesGuardGuardId() != thatLocation.getDevicesGuardGuardId()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getLocationId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getType());
        hash = 31 * hash + Integer.hashCode(getDevicesGuardGuardId());
        return hash;
    }
}