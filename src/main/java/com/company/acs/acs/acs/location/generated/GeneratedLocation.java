package com.company.acs.acs.acs.location.generated;

import com.company.acs.acs.acs.location.Location;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.Optional;

/**
 * The generated base for the {@link
 * com.company.acs.acs.acs.location.Location}-interface representing entities of
 * the {@code Location}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedLocation {
    
    /**
     * This Field corresponds to the {@link Location} field that can be obtained
     * using the {@link Location#getLocationId()} method.
     */
    IntField<Location, Integer> LOCATION_ID = IntField.create(
        Identifier.LOCATION_ID,
        Location::getLocationId,
        Location::setLocationId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Location} field that can be obtained
     * using the {@link Location#getLName()} method.
     */
    StringField<Location, String> L_NAME = StringField.create(
        Identifier.L_NAME,
        o -> OptionalUtil.unwrap(o.getLName()),
        Location::setLName,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Location} field that can be obtained
     * using the {@link Location#getLType()} method.
     */
    StringField<Location, String> L_TYPE = StringField.create(
        Identifier.L_TYPE,
        o -> OptionalUtil.unwrap(o.getLType()),
        Location::setLType,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Location} field that can be obtained
     * using the {@link Location#getDevicesGuardGuardId()} method.
     */
    IntField<Location, Integer> DEVICES_GUARD_GUARD_ID = IntField.create(
        Identifier.DEVICES_GUARD_GUARD_ID,
        Location::getDevicesGuardGuardId,
        Location::setDevicesGuardGuardId,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the locationId of this Location. The locationId field corresponds
     * to the database column ACS.ACS.Location.locationId.
     * 
     * @return the locationId of this Location
     */
    int getLocationId();
    
    /**
     * Returns the lName of this Location. The lName field corresponds to the
     * database column ACS.ACS.Location.lName.
     * 
     * @return the lName of this Location
     */
    Optional<String> getLName();
    
    /**
     * Returns the lType of this Location. The lType field corresponds to the
     * database column ACS.ACS.Location.lType.
     * 
     * @return the lType of this Location
     */
    Optional<String> getLType();
    
    /**
     * Returns the devicesGuardGuardId of this Location. The devicesGuardGuardId
     * field corresponds to the database column
     * ACS.ACS.Location.Devices_Guard_guardId.
     * 
     * @return the devicesGuardGuardId of this Location
     */
    int getDevicesGuardGuardId();
    
    /**
     * Sets the locationId of this Location. The locationId field corresponds to
     * the database column ACS.ACS.Location.locationId.
     * 
     * @param locationId to set of this Location
     * @return           this Location instance
     */
    Location setLocationId(int locationId);
    
    /**
     * Sets the lName of this Location. The lName field corresponds to the
     * database column ACS.ACS.Location.lName.
     * 
     * @param lName to set of this Location
     * @return      this Location instance
     */
    Location setLName(String lName);
    
    /**
     * Sets the lType of this Location. The lType field corresponds to the
     * database column ACS.ACS.Location.lType.
     * 
     * @param lType to set of this Location
     * @return      this Location instance
     */
    Location setLType(String lType);
    
    /**
     * Sets the devicesGuardGuardId of this Location. The devicesGuardGuardId
     * field corresponds to the database column
     * ACS.ACS.Location.Devices_Guard_guardId.
     * 
     * @param devicesGuardGuardId to set of this Location
     * @return                    this Location instance
     */
    Location setDevicesGuardGuardId(int devicesGuardGuardId);
    
    enum Identifier implements ColumnIdentifier<Location> {
        
        LOCATION_ID            ("locationId"),
        L_NAME                 ("lName"),
        L_TYPE                 ("lType"),
        DEVICES_GUARD_GUARD_ID ("Devices_Guard_guardId");
        
        private final String columnId;
        private final TableIdentifier<Location> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "ACS";
        }
        
        @Override
        public String getSchemaId() {
            return "ACS";
        }
        
        @Override
        public String getTableId() {
            return "Location";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Location> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}