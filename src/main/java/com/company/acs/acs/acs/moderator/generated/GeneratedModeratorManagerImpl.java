package com.company.acs.acs.acs.moderator.generated;

import com.company.acs.acs.acs.moderator.Moderator;
import com.company.acs.acs.acs.moderator.ModeratorManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.acs.acs.acs.moderator.Moderator} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedModeratorManagerImpl 
extends AbstractManager<Moderator> 
implements GeneratedModeratorManager {
    
    private final TableIdentifier<Moderator> tableIdentifier;
    
    protected GeneratedModeratorManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("ACS", "ACS", "Moderator");
    }
    
    @Override
    public TableIdentifier<Moderator> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Moderator>> fields() {
        return ModeratorManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Moderator>> primaryKeyFields() {
        return Stream.of(
            Moderator.MODERATOR_ID,
            Moderator.USERS_USER_ID
        );
    }
}